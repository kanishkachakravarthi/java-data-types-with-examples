Data types are divided into two groups:

Primitive data types - includes byte, short, int, long, float, double, boolean and char
Non-primitive data types - such as String, Arrays and Classes 
(you will learn more about these in a later chapter)
Primitive Data Types
A primitive data type specifies the type of a variable and the kind of values it can hold.

There are eight primitive data types in Java:
  1. boolean Data Type
     syntax : boolean booleanVar;
  2. byte Data Type
     syntax : byte byteVar;
  3. short Data Type
     Syntax:short shortVar;
  4. int Data Type
     Syntax:int intVar;
  5. long Data Type
     Syntax:long longVar;
  6. float Data Type
     Syntax:float floatVar;
  7. double Data Type
     Syntax: double doubleVar;
  8. char Data Type
    Syntax:char charVar;


examples for eight primitive data types 
  // Java Program to Demonstrate Char Primitive Data Type
class GFG 
{
    public static void main(String args[])
    {
        // Creating and initializing custom character
        char a = 'G';
        // Integer data type is generally
        // used for numeric values
        int i = 89;
        // use byte and short
        // if memory is a constraint
        byte b = 4;
        // this will give error as number is
        // larger than byte range
        // byte b1 = 7888888955;
        short s = 56;
        // this will give error as number is
        // larger than short range
        // short s1 = 87878787878;

        // by default fraction value
        // is double in java
        double d = 4.355453532;

        // for float use 'f' as suffix as standard
        float f = 4.7333434f;

        // need to hold big range of numbers then we need
        // this data type
        long l = 12121;

        System.out.println("char: " + a);
        System.out.println("integer: " + i);
        System.out.println("byte: " + b);
        System.out.println("short: " + s);
        System.out.println("float: " + f);
        System.out.println("double: " + d);
        System.out.println("long: " + l);
    }
}
